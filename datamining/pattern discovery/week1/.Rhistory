g <- ggplot(NEIcoalSCCYearsSum, aes(year, pm2.5))
p <- g + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for only coal combustion-related soureces") +
labs(y = "PM2.5, 1000 of tons")
print(p)
g <- ggplot(NEIcoalSCCYearsSum, aes(year, pm2.5))
p <- g + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for only coal combustion-related soureces") +
labs(y = "PM2.5, 1000 of tons")
print(p)
View(NEIBaltiYearsPointsSum)
View(SCC)
unique(SCC$EI.Sector)
grepl(unique(SCC$EI.Sector), "coal")
grepl( "coal", unique(SCC$EI.Sector),)
grepl( "Coal", unique(SCC$EI.Sector),)
grepl( "Vehi", unique(SCC$EI.Sector),)
coalSCC1 <- SCC[sapply((SCC$EI.Sector), grepl("Coal")),]$SCC
coalSCC1 <- SCC[sapply((SCC$EI.Sector), grepl("Coal",)),]$SCC
coalSCC1 <- SCC[sapply((SCC$EI.Sector), grepl("Coal",...)),]$SCC
any(grepl( "Vehi", unique(SCC$EI.Sector),))
coalgrepl <- function(row) {
#any(grepl("Coal", row))
grepl("Coal", row)
}
coalSCC1 <- SCC[sapply((SCC$EI.Sector), coalgrepl),]$SCC
coalgrepl <- function(row) {
any(grepl("Coal", row))
#grepl("Coal", row)
}
coalSCC <- SCC[sapply((SCC$EI.Sector), coalgrepl),]$SCC
NEIBalti <- filter(NEI, fips == "24510")
Vehiclegrepl <- function(row) {
any(grepl("Vehicles", row))
}
VehicleSCC <- SCC[sapply((SCC$EI.Sector), Vehiclegrepl),]$SCC
NEIVehicleSCCBalti <- filter(NEIBalti, SCC %in% VehicleSCC)
NEIVehicleSCCYearsSumBalti <- summarise(group_by(NEIVehicleSCCBalti, year),
pm2.5 = sum(Emissions, na.rm = TRUE)/1e+3)
#NEIcoalSCCYearsSum <- NEIcoalSCCYearsSum$pm2.5/1e+3
g <- ggplot(NEIVehicleSCCYearsSumBalti, aes(year, pm2.5))
p <- g + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for only coal combustion-related soureces") +
labs(y = "PM2.5, 1000 of tons")
print(p)
#question 5
#How have emissions from motor vehicle sources changed from 1999â€“2008 in Baltimore City?
NEIBalti <- filter(NEI, fips == "24510")
Vehiclegrepl <- function(row) {
any(grepl("Vehicles", row))
}
VehicleSCC <- SCC[sapply((SCC$EI.Sector), Vehiclegrepl),]$SCC
NEIVehicleSCCBalti <- filter(NEIBalti, SCC %in% VehicleSCC)
NEIVehicleSCCYearsSumBalti <- summarise(group_by(NEIVehicleSCCBalti, year),
pm2.5 = sum(Emissions, na.rm = TRUE))
#NEIcoalSCCYearsSum <- NEIcoalSCCYearsSum$pm2.5/1e+3
g <- ggplot(NEIVehicleSCCYearsSumBalti, aes(year, pm2.5))
p <- g + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for only coal combustion-related soureces") +
labs(y = "PM2.5, 1000 of tons")
print(p)
g <- ggplot(NEIVehicleSCCYearsSumBalti, aes(year, pm2.5))
p <- g + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for Baltimore") +
labs(y = "PM2.5, tons")
print(p)
png(filename = "plot1.png", width = 640, height = 300)
plot(xaxis, sumsYears, pch = 20, col = "red",
ylab = "PM2.5, millons of tons", xlab = "Years", xaxt = "n", ylim = c(0, 8))
axis(1, at = 1:4, Years)
legend("topright", legend = "Data", pch = 20, col = "red")
title("Overall Emission of PM2.5")
fit <- lm(sumsYears ~ xaxis)
abline(fit, lwd = 1, col = "blue")
dev.off()
NEIBaltiLA <- filter(NEI, fips %in% c("24510","06037")
#Creating function which for finding "Vehicles"
Vehiclegrepl <- function(row) {
any(grepl("Vehicles", row))
}
#Subsetting SCC's by vehicle type emissions
VehicleSCC <- SCC[sapply((SCC$EI.Sector), Vehiclegrepl),]$SCC
#Filtering Baltimore+LA Dataset by "Vehicle" SCCs
NEIVehicleSCCBaltiLA <- filter(NEIBaltiLA, SCC %in% VehicleSCC)
#Summarising dataset by year
NEIBaltiLA <- filter(NEI, fips %in% c("24510","06037"))
#Creating function which for finding "Vehicles"
Vehiclegrepl <- function(row) {
any(grepl("Vehicles", row))
}
#Subsetting SCC's by vehicle type emissions
VehicleSCC <- SCC[sapply((SCC$EI.Sector), Vehiclegrepl),]$SCC
#Filtering Baltimore+LA Dataset by "Vehicle" SCCs
NEIVehicleSCCBaltiLA <- filter(NEIBaltiLA, SCC %in% VehicleSCC)
View(NEIVehicleSCCBaltiLA)
NEIVehicleSCCYearsSumBaltiLA <- summarise(group_by(NEIVehicleSCCBalti, year, fips),
pm2.5 = sum(Emissions, na.rm = TRUE))
NEIVehicleSCCBaltiLA <- filter(NEIBaltiLA, SCC %in% VehicleSCC)
#Summarising dataset by year
NEIVehicleSCCYearsSumBaltiLA <- summarise(group_by(NEIVehicleSCCBalti, year, fips),
pm2.5 = sum(Emissions, na.rm = TRUE))
g <- ggplot(NEIVehicleSCCYearsSumBaltiLA, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ fips) +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for Baltimore") +
labs(y = "PM2.5, tons")
print(p)
View(NEIVehicleSCCYearsSumBaltiLA)
NEIVehicleSCCYearsSumBaltiLA <- summarise(group_by(NEIVehicleSCCBaltiLA, year, fips),
pm2.5 = sum(Emissions, na.rm = TRUE))
View(NEIVehicleSCCYearsSumBaltiLA)
g <- ggplot(NEIVehicleSCCYearsSumBaltiLA, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ fips) +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for Baltimore") +
labs(y = "PM2.5, tons")
print(p)
g <- ggplot(NEIVehicleSCCYearsSumBaltiLA, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ fips) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for Baltimore") +
labs(y = "PM2.5, tons")
print(p)
factor(NEIVehicleSCCYearsSumBaltiLA$fips)
NEIVehicleSCCYearsSumBaltiLA$fips <- factor(NEIVehicleSCCYearsSumBaltiLA$fips)
View(NEIVehicleSCCYearsSumBaltiLA)
revalue(NEIVehicleSCCYearsSumBaltiLA$fips, c("06037"="Los Angeles County, CA",
"24510"="Baltimore"))
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"]
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"] <-
"Los Angeles County, CA"
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"] <- "Los Angeles County, CA"
NEIVehicleSCCYearsSumBaltiLA <- summarise(group_by(NEIVehicleSCCBaltiLA, year, fips),
pm2.5 = sum(Emissions, na.rm = TRUE))
NEIVehicleSCCYearsSumBaltiLA$fips <- factor(NEIVehicleSCCYearsSumBaltiLA$fips)
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"]
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"][1]
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"][1] <- "aaa"
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"][1] <- "11"
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"][1] <- 11
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"][1] <- c("1")
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"][1]
NEIVehicleSCCYearsSumBaltiLA <- summarise(group_by(NEIVehicleSCCBaltiLA, year, fips),
pm2.5 = sum(Emissions, na.rm = TRUE))
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"][1]
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"] <- "Los Angeles County, CA"
NEIVehicleSCCYearsSumBaltiLA$fips <- factor(NEIVehicleSCCYearsSumBaltiLA$fips)
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "24510"] <- "Baltimore"
NEIVehicleSCCYearsSumBaltiLA <- summarise(group_by(NEIVehicleSCCBaltiLA, year, fips),
pm2.5 = sum(Emissions, na.rm = TRUE))
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"] <- "Los Angeles County, CA"
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "24510"] <- "Baltimore"
NEIVehicleSCCYearsSumBaltiLA$fips <- factor(NEIVehicleSCCYearsSumBaltiLA$fips)
g <- ggplot(NEIVehicleSCCYearsSumBaltiLA, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ fips) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for LA and Baltimore") +
labs(y = "PM2.5, tons")
print(p)
g <- ggplot(NEIVehicleSCCYearsSumBaltiLA, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ fips) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for LA and Baltimore") +
labs(y = "PM2.5, tons") +
facet_grid(facets, margins = FALSE, scales = "free_y",
space = "fixed", shrink = TRUE,
labeller = "label_value", as.table = TRUE, drop = TRUE)
print(p)
g <- ggplot(NEIVehicleSCCYearsSumBaltiLA, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ fips, scales = "free") +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for LA and Baltimore") +
labs(y = "PM2.5, tons") +
facet_grid(facets, margins = FALSE, scales = "free_y",
space = "fixed", shrink = TRUE,
labeller = "label_value", as.table = TRUE, drop = TRUE)
print(p)
g <- ggplot(NEIVehicleSCCYearsSumBaltiLA, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ fips, scales = "free") +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for LA and Baltimore") +
labs(y = "PM2.5, tons") +
print(p
)
g <- ggplot(NEIVehicleSCCYearsSumBaltiLA, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ fips, scales = "free") +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for LA and Baltimore") +
labs(y = "PM2.5, tons")
print(p)
ggplotGrob()
ggplotGrob(p)
p1 <- ggplotGrob(p)
p1$heights
unit(2, "null")
#set locale Language to ENG
Sys.setlocale("LC_TIME", "C");
Sys.setlocale("LC_TIME", "C");
setwd("C:/Users/a.titov/rprog/Exploratory-Data-Analysis/week2")
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(fileURL, destfile = "data.zip")
unzip("data.zip")
file.remove("data.zip")
NEI <- readRDS("summarySCC_PM25.rds", refhook = NULL)
SCC <- readRDS("Source_Classification_Code.rds", refhook = NULL)
file.remove("summarySCC_PM25.rds","Source_Classification_Code.rds")
#question 1:
#Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
#Using the base plotting system, make a plot showing the total PM2.5 emission
#from all sources for each of the years 1999, 2002, 2005, and 2008.
sumsYears <- c(sum(NEI[NEI$year == 1999,]$Emissions),
sum(NEI[NEI$year == 2002,]$Emissions),
sum(NEI[NEI$year == 2005,]$Emissions),
sum(NEI[NEI$year == 2008,]$Emissions))
sumsYears <- sumsYears/1e+6
Years <- c(1999, 2002, 2005, 2008)
xaxis <- 1:4
par(mfrow = c(1,1))
png(filename = "plot1.png", width = 640, height = 300)
plot(xaxis, sumsYears, pch = 20, col = "red",
ylab = "PM2.5, millons of tons", xlab = "Years", xaxt = "n", ylim = c(0, 8))
axis(1, at = 1:4, Years)
legend("topright", legend = "Data", pch = 20, col = "red")
title("Overall Emission of PM2.5")
fit <- lm(sumsYears ~ xaxis)
abline(fit, lwd = 1, col = "blue")
dev.off()
#question 2:
#Have total emissions from PM2.5 decreased in the Baltimore City,
#Maryland (fips == "24510") from 1999 to 2008? Use the base plotting
#system to make a plot answering this question.
library(dplyr)
par(mfrow = c(1,1))
png(filename = "plot2.png", width = 640, height = 480)
NEIBalti <- filter(NEI, fips == "24510")
NEIBaltiYearsSum <- summarise(group_by(NEIBalti, year),
pm2.5 = sum(Emissions, na.rm = TRUE))
plot(NEIBaltiYearsSum$year, NEIBaltiYearsSum$pm2.5, pch = 20, col = "red",
ylab = "PM2.5, tons", xlab = "Years", xaxt = "n")
axis(1, NEIBaltiYearsSum$year, Years)
legend("topright", legend = "Data", pch = 20, col = "red")
title("Overall Emission of PM2.5 in Baltimore")
fit <- lm(NEIBaltiYearsSum$pm2.5 ~ NEIBaltiYearsSum$year)
abline(fit, lwd = 1, col = "blue")
dev.off()
#question 3:
#Of the four types of sources indicated by the type (point, nonpoint,
#onroad, nonroad) variable, which of these four sources have seen decreases
#in emissions from 1999â€“2008 for Baltimore City? Which have seen increases
#in emissions from 1999â€“2008? Use the ggplot2 plotting system to make a plot
#answer this question.
library(ggplot2)
NEIBalti <- filter(NEI, fips == "24510")
NEIBaltiYearsPointsSum <- summarise(group_by(NEIBalti, year, type),
pm2.5 = sum(Emissions, na.rm = TRUE))
png(filename = "plot3.png", width = 640, height = 300)
g <- ggplot(NEIBaltiYearsPointsSum, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ type) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 emissions in Baltimore by type") +
labs(y = "PM2.5, tons")
print(p)
dev.off()
#question 4:
#Across the United States, how have emissions from coal combustion-related sources changed
#from 1999â€“2008?
coalgrepl <- function(row) {
any(grepl("Coal", row))
#grepl("Coal", row)
}
#getting SCC codes for coal combustion-related sources
coalSCC <- SCC[sapply((SCC$EI.Sector), coalgrepl),]$SCC
#filtering NEI by only coal combustion-related sources
NEIcoalSCC <- filter(NEI, SCC %in% coalSCC)
NEIcoalSCCYearsSum <- summarise(group_by(NEIcoalSCC, year),
pm2.5 = sum(Emissions, na.rm = TRUE)/1e+3)
png(filename = "plot4.png", width = 640, height = 300)
g <- ggplot(NEIcoalSCCYearsSum, aes(year, pm2.5))
p <- g + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for only coal combustion-related soureces") +
labs(y = "PM2.5, 1000 of tons")
print(p)
dev.off()
#question 5
#How have emissions from motor vehicle sources changed from 1999â€“2008 in Baltimore City?
#filtering inly Baltimore emissions
NEIBalti <- filter(NEI, fips == "24510")
#Creating function which for finding "Vehicles"
Vehiclegrepl <- function(row) {
any(grepl("Vehicles", row))
}
#Subsetting SCC's by vehicle type emissions
VehicleSCC <- SCC[sapply((SCC$EI.Sector), Vehiclegrepl),]$SCC
#Filtering Baltimore Dataset by "Vehicle" SCCs
NEIVehicleSCCBalti <- filter(NEIBalti, SCC %in% VehicleSCC)
#Summarising dataset by year
NEIVehicleSCCYearsSumBalti <- summarise(group_by(NEIVehicleSCCBalti, year),
pm2.5 = sum(Emissions, na.rm = TRUE))
png(filename = "plot5.png", width = 640, height = 300)
g <- ggplot(NEIVehicleSCCYearsSumBalti, aes(year, pm2.5))
p <- g + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for Baltimore") +
labs(y = "PM2.5, tons")
print(p)
dev.off()
#question 6
#Compare emissions from motor vehicle sources in Baltimore City with emissions from
#motor vehicle sources in Los Angeles County, California (fips == "06037").
#Which city has seen greater changes over time in motor vehicle emissions?
library(dplyr)
NEIBaltiLA <- filter(NEI, fips %in% c("24510","06037"))
#Creating function which for finding "Vehicles"
Vehiclegrepl <- function(row) {
any(grepl("Vehicles", row))
}
#Subsetting SCC's by vehicle type emissions
VehicleSCC <- SCC[sapply((SCC$EI.Sector), Vehiclegrepl),]$SCC
#Filtering Baltimore+LA Dataset by "Vehicle" SCCs
NEIVehicleSCCBaltiLA <- filter(NEIBaltiLA, SCC %in% VehicleSCC)
#Summarising dataset by year
NEIVehicleSCCYearsSumBaltiLA <- summarise(group_by(NEIVehicleSCCBaltiLA, year, fips),
pm2.5 = sum(Emissions, na.rm = TRUE))
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "06037"] <- "Los Angeles County, CA"
NEIVehicleSCCYearsSumBaltiLA$fips[NEIVehicleSCCYearsSumBaltiLA$fips %in% "24510"] <- "Baltimore"
NEIVehicleSCCYearsSumBaltiLA$fips <- factor(NEIVehicleSCCYearsSumBaltiLA$fips)
png(filename = "plot6.png", width = 640, height = 300)
g <- ggplot(NEIVehicleSCCYearsSumBaltiLA, aes(year, pm2.5))
p <- g + geom_point() + facet_wrap( ~ fips, scales = "free") +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for motor vehicle sources for LA and Baltimore") +
labs(y = "PM2.5, tons")
print(p)
dev.off()
g <- ggplot(NEIcoalSCCYearsSum, aes(year, pm2.5))
p <- g + geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits = c(0, 600)) +
scale_x_continuous(breaks =  c(1999, 2002, 2005, 2008)) +
labs(title = "PM2.5 for only coal combustion-related soureces") +
labs(y = "PM2.5, 1000 of tons")
print(p)
View(NEI)
View(NEIBalti)
pal <- colorRamp(c("yellow", "grenn"))
pal <- colorRamp(c("yellow", "greÑƒn"))
pal <- colorRamp(c("yellow", "green"))
pal(1)
pal(0)
seq(0,1, length = 10
)
pal(seq(0,1, length = 10))
pal <- colorRampPalette(c("yellow", "green"))
pal(3)
pal(seq(0,1, length = 10))
image(volcano)
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(3,"BuGn")
pal <- colorRampPalette(cols)
pal(1)
image(volcano, col = pal())
image(volcano, col = pal
)
image(volcano, col = pal(10))
image(volcano, col = pal(20))
image(volcano, col = pal(100))
image(volcano, col = pal(2))
image(volcano, col = pal(8))
image(volcano, col = heat.colors(10))
image(volcano, col = topo.colors(10))
smoothScatter(x,y)
x <-rnorm(1000)
y <-rnorm(1000)
smoothScatter(x,y)
plot(x,y, pch = 20)
plot(x,y, col = rgb(0,0,0,0.1), pch = 20)
getwd()
setwd("c:\Users\a.titov\rprog\datamining\pattern discovery\week1\")
setwd("c:/Users/a.titov/rprog/datamining/pattern discovery/week1/")
install.packages("arules")
install.packages("arulesVIS")
install.packages("arulesViz")
sample(1:2,9, replace = TRUE)
sample(1:10,9, replace = TRUE)
sample(2:10,80,replace=TRUE)
setwd("c:/Users/a.titov/rprog/datamining/pattern discovery/week1/")
#loadaing Mining Association Rules and Frequent Itemsets package
#Apriori and Eclat
library("arules", "arulesViz")
#random transaction generation code
Itemlist<-c("Beer","Coffee","Nuts","Diapers","Milk","Bread",
"Wine","Cheese","HotDogs","Steak","Ketchup","Mustard")
N <- 40
numOfTrans <- sample(2:7, N, replace = TRUE)
for (i in N) {
}
Itemlist<-c("Beer","Coffee","Nuts","Diapers","Milk","Bread","Wine","Cheese","HotDogs","Steak","Ketchup","Mustard")
sample(Itemlist,6, replace=TRUE)
sample(Itemlist,6, replace=FALSE)
sample(Itemlist,6, replace=FALSE)
sample(Itemlist,6, replace=FALSE)
sample(Itemlist,6, replace=TRUE)
list(sample(Itemlist,6, replace=TRUE))
DB <- data.frame()
DB[1] <- list(sample(Itemlist,6, replace=TRUE))
DB[1] <- (sample(Itemlist,6, replace=TRUE))
DB
DB[1] <- as.list((sample(Itemlist,6, replace=TRUE)))
as.list((sample(Itemlist,6, replace=TRUE)))
DB[1] <- list((sample(Itemlist,6, replace=TRUE))
DB[1] <- 1:10
DB <-list()
DB[1] <- 1:10
DB[1] <- list((sample(Itemlist,6, replace=TRUE))
)
DB
for (i in N) {
TransList[i] <- list(sample(Itemlist, numOfTrans[i], replace = TRUE))
}
TransList <- list()
for (i in N) {
TransList[i] <- list(sample(Itemlist, numOfTrans[i], replace = TRUE))
}
numOfTrans <- sample(2:7, N, replace = TRUE)
TransList <- list()
for (i in N) {
TransList[i] <- list(sample(Itemlist, numOfTrans[i], replace = TRUE))
}
ist(sample(Itemlist, numOfTrans[1], replace = TRUE))
list(sample(Itemlist, numOfTrans[1], replace = TRUE))
TransList[1] <- list(sample(Itemlist, numOfTrans[i], replace = TRUE))
for (i in N) {
TransList[i] <- list(sample(Itemlist, numOfTrans[i], replace = TRUE))
}
N <- 40
numOfTrans <- sample(2:7, N, replace = TRUE)
TransList <- list()
for (i in 1:N) {
TransList[i] <- list(sample(Itemlist, numOfTrans[i], replace = TRUE))
}
numOfTrans <- sample(2:7, N, replace = TRUE)
TransList <- list()
for (i in 1:N) {
TransList[i] <- list(sample(Itemlist, numOfTrans[i], replace = FALSE))
}
set.seed(998)
Itemlist<-c("Beer","Coffee","Nuts","Diapers","Milk","Bread",
"Wine","Cheese","HotDogs","Steak","Ketchup","Mustard")
N <- 40
numOfTrans <- sample(2:7, N, replace = TRUE)
TransList <- list()
for (i in 1:N) {
TransList[i] <- list(sample(Itemlist, numOfTrans[i], replace = FALSE))
}
?as
TransList
as(TransList, "transactions")
as.matrix(TransList)
transDB<-as(TransList,"transactions")
transDB<-as(TransList,"matrix")
transDB
library("arules", "arulesViz")
install.packages("arules")
chooseCRANmirror()
install.packages("arules")
library("arules", "arulesViz")
transDB<-as(TransList,"transactions")
transDB
Transactions <- as(TransList, "transactions")
eclat(Transactions, support=0.5)
eclat(Transactions, support = 0.5)
eclat(Transactions,  list(supp = 0.5, maxlen = 15))
eclat(Transactions,  list(supp = 0.5, maxlen = 10))
eclat(Transactions,  list(supp = 0.1, maxlen = 10))
eclat(Transactions,  list(supp = 0.2, maxlen = 10))
freqPatterns <- eclat(Transactions,  list(supp = 0.2, maxlen = 10))
inspect(freqPatterns)
freqPatternsAP <- apriori(Transactions, parameter=list(supp=0.2, conf=0.5))
inspect(freqPatternsAP)
